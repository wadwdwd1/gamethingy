var loadModules=function(e,n,o){function t(e,n,o,t){!function(e,n){var o=document.createElement("script");o.onload=function(){n()},o.onerror=function(){throw new Error("failed to load "+e)},o.async=!0,o.src=e,o.crossOrigin="anonymous",document.head.appendChild(o)}(n,function(){var n=window[e];window[e+"Lib"]=n,n({locateFile:function(){return o}}).then(function(n){window[e]=n,t()})})}if(void 0===e||0===e.length)setTimeout(o);else{var l=e.length,r=function(){0===--l&&o()},a=function(){try{if("object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate){const e=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(e instanceof WebAssembly.Module)return new WebAssembly.Instance(e)instanceof WebAssembly.Instance}}catch(e){}return!1}();e.forEach(function(e){if(!e.hasOwnProperty("preload")||e.preload)if(a)t(e.moduleName,n+e.glueUrl,n+e.wasmUrl,r);else{if(!e.fallbackUrl)throw new Error("wasm not supported and no fallback supplied for module "+e.moduleName);t(e.moduleName,n+e.fallbackUrl,"",r)}else r()})}};